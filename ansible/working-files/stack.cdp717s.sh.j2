#!/usr/bin/env bash
STACK_VERSION=20211019032637

# Mandatory component:              BASE
# Common components to CDH and CDP: CDSW, FLINK, HBASE HDFS, HIVE, HUE, IMPALA, KAFKA, KUDU,
#                                   NIFI, OOZIE, SCHEMAREGISTRY, SMM, SRM, SOLR, SPARK_ON_YARN, YARN,
#                                   ZOOKEEPER
# CDP-only components:              ATLAS, KNOX, LIVY, OZONE, RANGER, ZEPPELIN
CM_SERVICES=BASE,ZOOKEEPER,HDFS,YARN,HIVE,HUE,IMPALA,KAFKA,KUDU,NIFI,OOZIE,OZONE,SCHEMAREGISTRY,SPARK_ON_YARN,SMM,CDSW,FLINK,SOLR,HBASE,ATLAS,LIVY,ZEPPELIN,RANGER,KNOX
ENABLE_KERBEROS=yes
KERBEROS_TYPE=IPA
ENABLE_TLS=yes

##### Cloudera public repository credentials - only needed if using subscription-only URLs below; leave it blank otherwise
REMOTE_REPO_USR={{ cdp_remote_repo_usr }}
REMOTE_REPO_PWD={{ cdp_remote_repo_pwd }}

#####  Java Package
JAVA_PACKAGE_NAME=java-1.8.0-openjdk-devel

##### Maven binary
MAVEN_BINARY_URL=s3://edge2ai-workshop/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz

BASE_URI=s3://edge2ai-workshop

#####  CM
CM_VERSION=7.5.2
CM_GBN=17592229
CM_MAJOR_VERSION=${CM_VERSION%%.*}
# Specify either CM_REPO_AS_TARBALL_URL or the pair CM_BASE_URL, CM_REPO_FILE_URL, but not both
CM_REPO_AS_TARBALL_URL=s3://edge2ai-workshop/s3/build/${CM_GBN}/cm${CM_MAJOR_VERSION}/${CM_VERSION}/repo-as-tarball/cm${CM_VERSION}-redhat7.tar.gz
CM_BASE_URL=
CM_REPO_FILE_URL=

#####  CDH
CDH_VERSION=7.1.7
CDH_GBN=15945976
CDH_BUILD=${CDH_VERSION}-1.cdh${CDH_VERSION}.p0.${CDH_GBN}
CDH_MAJOR_VERSION=${CDH_VERSION%%.*}
CDH_BASE_URI=s3://edge2ai-workshop/s3/build/${CDH_GBN}
CDH_PARCEL_REPO=${CDH_BASE_URI}/cdh/${CDH_MAJOR_VERSION}.x/parcels/

#####  CFM
CFM_VERSION=2.1.2.0
CFM_GBN=16115946
CFM_BUILD=${CFM_VERSION}-283
CFM_MAJOR_VERSION=${CFM_VERSION%%.*}
NIFI_VERSION=1.13.2
NIFI_REGISTRY_VERSION=0.8.0
CFM_BASE_URL=s3://edge2ai-workshop/s3/build/${CFM_GBN}/cfm/${CFM_MAJOR_VERSION}.x/redhat7/yum/tars
CFM_PARCEL_REPO=${CFM_BASE_URL}/parcel
CFM_NIFI_CSD_URL=${CFM_BASE_URL}/parcel/NIFI-${NIFI_VERSION}.${CFM_BUILD}.jar
CFM_NIFIREG_CSD_URL=${CFM_BASE_URL}/parcel/NIFIREGISTRY-${NIFI_REGISTRY_VERSION}.${CFM_BUILD}.jar

#####  Anaconda
ANACONDA_VERSION=5.1.0.1
ANACONDA_PARCEL_REPO=s3://edge2ai-workshop/anaconda/

#####  CDSW
# If version is set, install will be attempted
CDSW_VERSION=1.9.2
CDSW_GBN=14556745
CDSW_BUILD=${CDSW_VERSION}.p1.${CDSW_GBN}
CDSW_BASE_URL=s3://edge2ai-workshop/s3/build/${CDSW_GBN}/cdsw1/${CDSW_VERSION}
CDSW_PARCEL_REPO=${CDSW_BASE_URL}/parcels/
CDSW_CSD_URL=${CDSW_BASE_URL}/csd/CLOUDERA_DATA_SCIENCE_WORKBENCH-CDPDC-${CDSW_VERSION}.jar

#####  CEM
CEM_VERSION=1.2.2.0
CEM_MAJOR_VERSION=${CEM_VERSION%%.*}
EFM_VERSION=1.0.0
MINIFI_VERSION=0.6.0
CEM_BUILD=${CEM_VERSION}-14
CEM_BASE_URL=s3://edge2ai-workshop/CEM/centos7/${CEM_MAJOR_VERSION}.x/BUILDS/${CEM_BUILD}/tars
# PUBLIC TARBALL
CEM_URL=
# INDIVIDUAL TARBALLS
EFM_TARBALL_URL=${CEM_BASE_URL}/efm/efm-${EFM_VERSION}.${CEM_BUILD}-bin.tar.gz
MINIFI_TARBALL_URL=${CEM_BASE_URL}/minifi/minifi-${MINIFI_VERSION}.${CEM_BUILD}-bin.tar.gz
MINIFITK_TARBALL_URL=${CEM_BASE_URL}/minifi/minifi-toolkit-${MINIFI_VERSION}.${CEM_BUILD}-bin.tar.gz

#####   CSA
CSA_VERSION=1.5.0.1
CSA_GBN=17559653
CSA_JAR_TARGET=7.1.7.0-551
FLINK_VERSION=1.13.2
CSA_BASE_URL=s3://edge2ai-workshop/s3/build/${CSA_GBN}/csa/${CSA_VERSION}
FLINK_BUILD=${FLINK_VERSION}-csa${CSA_VERSION}-cdh${CSA_JAR_TARGET}-${CSA_GBN}
CSA_PARCEL_REPO=${CSA_BASE_URL}/parcels/
FLINK_CSD_URL=${CSA_BASE_URL}/csd/FLINK-${FLINK_BUILD}.jar
SSB_CSD_URL=${CSA_BASE_URL}/csd/SQL_STREAM_BUILDER-${FLINK_BUILD}.jar

# Parcels to be pre-downloaded during install.
# Cloudera Manager will download any parcels that are not already downloaded previously.
PARCEL_URLS=(
  hadoop         "$CDH_BUILD"                         "$CDH_PARCEL_REPO"
  nifi           "$CFM_BUILD"                         "$CFM_PARCEL_REPO"
  cdsw           "$CDSW_BUILD"                        "$CDSW_PARCEL_REPO"
  Anaconda       "$ANACONDA_VERSION"                  "$ANACONDA_PARCEL_REPO"
  flink          "$FLINK_BUILD"                       "$CSA_PARCEL_REPO"
)

CSD_URLS=(
  $CFM_NIFI_CSD_URL
  $CFM_NIFIREG_CSD_URL
  $CDSW_CSD_URL
  $FLINK_CSD_URL
  $SSB_CSD_URL
)
